from tkinter import messagebox
from tkinter import font 

import mysql.connector as mysql
from mysql.connector.errors import Error, custom_error_exception

from tkinter import *

import PIL
from PIL import Image,ImageTk

import time
import datetime

import random
from random import randint as ranumber

import pyautogui
import pyautogui as autopy

import tkinter.ttk
import tkinter.font as tkfont

import string

#importing the module is done here

width,height=pyautogui.size()

connecting=mysql.connect(host='localhost',user='root',passwd='root')

if connecting.is_connected():
    print('mysql is connected')

cursor=connecting.cursor(buffered=True)
cursor.execute('create database if not exists password_manager')
cursor.execute("use password_manager")
cursor.execute("create table if not exists login(username varchar(60) primary key, password varchar(60) not null,uniquecode varchar(40) not null,sercet_question varchar(50) not null,sercet_question_code int not null,sercet_answer varchar(50) not null,name varchar(50) not null)")

uniquecode_generator='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
specialchar="!@#?$%*&"

#---------------------------Password Checker for all the modules----------------------------------
def password_checker(password_a,password_b):
    space=upper=num=special=0

    for i in password_a:
        if i.isspace():
            space+=1
        if i.isupper():
            upper+=1
        if i.isnumeric():
            num+=1
        if i in specialchar:
            special+=1

    if password_a==password_b:
        if space==0 and upper>=1 and num>=3 and special>=1 and len(password_a)>=10:
            return True
        else:
            False
    else:
        False
#----------------------------------------------------------------------------------------------------       

#------------------------------User's GUI ------------------------------------------------------------
def user_ui():
#-----------------------------------auto generate function for password-------------------------------
    def auto_generate():

            global auto_new_password

            messagebox.showinfo("Password Management System",
                "Please note, this password generated by system is saved in this application,you have to later go to the website and change it")
            
            string_specials = '!@#$?%*&'
            string_pool = string_specials + string.ascii_letters + string.digits
            
            def password_maker():
                global space,upper,lower,special,num,password
            
                space=0
                upper=0
                lower=0
                special=0
                num=0
                pre_password = [
            
                random.choice(string_specials),
                random.choice(string.ascii_uppercase),
                random.choice(string.ascii_lowercase),
                random.choice(string.digits),
                random.choice(string_pool),
                random.choice(string_pool),
                random.choice(string_pool),
                random.choice(string_pool),
                random.choice(string_pool),
                random.choice(string_pool)]
            
                scrambled = []
            
                while pre_password:
            
                    scrambled.append(pre_password.pop(random.randint(0, len(pre_password)-1)))
            
                password = ''.join(scrambled)
            
                for i in password:
                        if i.isspace():
                            space+=1
                        if i.isupper():
                            upper+=1
                        if i.isnumeric():
                            num+=1
                        for j in string_specials:
                            if i==j:
                                special+=1
            
            password_maker()
            
            while True:
            
                if space==0 and upper>=1 and num>=3 and special>=1:
                    auto_new_password=password
                    break
                else:
                    password_maker()
            
            if e_password.get() or e_c_password.get():
                e_password.delete(0,END)
                e_c_password.delete(0,END)
            
            e_password.insert(0,auto_new_password)
            e_c_password.insert(0,auto_new_password)
#--------------------------------------------------------------------------------------------------

#------------------------------data insertion---------------------------------    
    def user_data_insertion():

        def data_insertion():
            global e_password,e_c_password

#-------------------Inserting the record into SQL(insert function)---------------------
            def apply_new_record():
                not_cleared=2
                space=upper=num=special=0

                for i in e_password.get():
                    if i.isspace():
                        space+=1
                    if i.isupper():
                        upper+=1
                    if i.isnumeric():
                        num+=1
                    if i in specialchar:
                        special+=1
                if e_password.get()==e_c_password.get():
                    if space==0 and upper>=1 and num>=3 and special>=1:
                        cursor.execute('select * from '+tablename)
                        data_user=cursor.fetchall()
                        not_cleared=2
                        for i in range(len(data_user)):
                            if data_user[i][0]==e_username.get():
                                if data_user[i][1]==e_password.get():
                                    if data_user[i][2]==e_website.get():
                                        messagebox.showerror("PASSWORD MANAGEMENT SYSTEM",'Sorry This entry is already there, No dulicate enteries allowed.')
                                        not_cleared=1
                        if not_cleared!=1:
                            data=(e_username.get(),e_password.get(),e_website.get())
                            cmd="insert into "+tablename+" values(%s,%s,%s)"
                            cursor.execute(cmd,data)
                            connecting.commit()
                            update_record_info()
                            messagebox.showinfo("Password Management System","Your Data Entry has been recorded...")
                    else:
                        messagebox.showinfo("PASSSWORD MANAGEMENT SYSTEM",
                        "Sorry your password is not satisfying the required conditions... Conditions are: Atleast one Capital Letter, 3 numbers, 1 special character and atleast 10 characters long... special characters ex: ('!@#$%*&')")
                else:
                    messagebox.showinfo("PASSSWORD MANAGEMENT SYSTEM",
                    "Sorry your password is not satisfying the required conditions... Conditions are: Atleast one Capital Letter, 3 numbers, 1 special character and atleast 10 characters long... special characters ex: ('!@#$%*&')")
#------------------------------------------------------------------------------------------------------------------------

#-----------------Making of the entry, button, lable widget -----------------
#-------------------------for the data entry for user------------------------   
         
            main_canvas=Canvas(stem,width=800,height=250,bd=10,highlightthickness=0)
            main_canvas.place(x=300,y=150)
            main_canvas.create_rectangle(10,10,800,250)

            title_label=Label(stem,text="Data Entry",font=tkfont.Font(family="akzidenz grotesk",size=20,weight=tkfont.BOLD))
            title_label.place(x=575,y=175)

            l_username=Label(stem,text="Username:",font=tkfont.Font(size=18,weight=tkfont.BOLD,family="trebuchet ms"))
            l_username.place(x=315,y=225)

            l_password=Label(stem,text="Password:",font=tkfont.Font(size=18,weight=tkfont.BOLD,family="trebuchet ms"))
            l_password.place(x=315,y=255)

            l_c_password=Label(stem,text="Confirm Password:",font=tkfont.Font(size=18,weight=tkfont.BOLD,family="trebuchet ms"))
            l_c_password.place(x=315,y=285)
            
            l_website=Label(stem,text="Website:",font=tkfont.Font(size=18,weight=tkfont.BOLD,family="trebuchet ms"))
            l_website.place(x=315,y=315)
            
            e_username=Entry(stem,bd=2,width=27,highlightthickness=0,font=tkfont.Font(size=18,weight=tkfont.BOLD,family="trebuchet ms"))
            e_username.place(x=500,y=225)
            
            e_password=Entry(stem,bd=2,width=27,highlightthickness=0,font=tkfont.Font(size=18,weight=tkfont.BOLD,family="trebuchet ms"))
            e_password.place(x=500,y=255)

            e_c_password=Entry(stem,bd=2,width=27,highlightthickness=0,font=tkfont.Font(size=18,weight=tkfont.BOLD,family="trebuchet ms"))
            e_c_password.place(x=500,y=285)
            
            e_website=Entry(stem,bd=2,width=27,highlightthickness=0,font=tkfont.Font(size=18,weight=tkfont.BOLD,family="trebuchet ms"))
            e_website.place(x=500,y=315)

            b_insert=Button(stem,text="Insert record",width=45,height=2,command=apply_new_record)
            b_insert.place(x=550,y=350)

            b_autogenerate=Button(stem,text="Auto-generate password",width=20,height=2,command=auto_generate)
            b_autogenerate.place(x=850,y=265)
    ## Calling the insertion function for making the widgets....
        data_insertion()
#------------------------------------------------------------------------------------------------------------

#-------------------signout funtion for user's gui--------------------------------------------------
    def signout():
        messagebox.showinfo('PASSWORD MANAGEMENT SYSTEM','You are about to logout from your account.')
        stem.destroy()
        login_ui()

#-------------------------------------------------------------------------------------------------------

#------------------------------updation of the user password for a particle website(user gui)------------
    def update__info():
#--------------------------Checking the user credentials from the website name-----------------------------
        def SQL_part_Update_part1():

            cursor.execute('select * from '+tablename)
            checkdata=cursor.fetchall()
            e1username=[]
            e1password=[]

            for i in range(len(checkdata)):
                if checkdata[i][2]==e1_website.get() or checkdata[i][2].lower()==e1_website.get().lower():
                    e1username.append(checkdata[i][0])
                    e1password.append(checkdata[i][1])

            if e1_website.get()=="":
                messagebox.showinfo("PASSWORD MANAGEMENT SYSTEM","You haven't entered anything in the given field...")
            
            if len(e1username)>1:

                messagebox.showinfo("PASSWORD MANAGEMENT SYSTEM",'You have more than 2 Password for this website...')
                e1_username.delete(0,END)
                e1_password.delete(0,END)

#----------------value to place the button--------------------------
                xaxis=300

                def multibutton(value):
                    e1_username.delete(0,END)
                    e1_password.delete(0,END)
                    e1_username.insert(0,e1username[value])
                    e1_password.insert(0,e1password[value])

                for i in range(len(e1username)):

                    global buttonabcd
                    buttonabcd=Button(update_data_canvas,text=f'Password {i+1}',command=lambda idx = i: multibutton(idx))
                    buttonabcd.place(x=xaxis,y=50)
                    xaxis+=100

            if len(e1username)==0:

                messagebox.showinfo("PASSWORD MANAGEMENT SYSTEM","Sorry you don't have any password saved for this website...")
                e1_website.delete(0,END)

            if len(e1username)==1:

                e1_username.delete(0,END)
                e1_password.delete(0,END)

                e1_username.insert(0,e1username[0])
                e1_password.insert(0,e1password[0])
#---------------------------------------------------------------------------------------------------------------

#--------------------------------Updating the user's record in (user's gui)--------------------------------------
        def SQL_part_Update_part2():

            checkvalue_sql=password_checker(e1_newpassword.get(),e1_cpassword.get())
            
            if checkvalue_sql==True:
                
                cursor.execute("update "+tablename+" set password='"+e1_newpassword.get()+"' where username='"+e1_username.get()+"' and website='"+e1_website.get()+"'")
                connecting.commit()
                messagebox.showinfo("PASSWORD MANAGEMENT SYSTEM","your password has been successfully updated...")
                update_data_canvas.destroy()
                update_record_info()
            
            else:
                messagebox.showerror("PASSWORD MANAGEMENT SYSTEM","sorry your passwor is not matching or you have missed some fields required...")
        
        update_data_canvas=Canvas(stem,width=1200,height=700)
        update_data_canvas.place(x=250,y=140)

        messagebox.showinfo("PASSWORD MANAGEMENT SYSTEM","Required Condition to satisfy are : Atleast 10 characters long, has atleast one Captical case letter, 3 numbers and one special character(ex:'!@#$*%&')")

        l1_website=Label(update_data_canvas,text="Website:",
            font=tkfont.Font(size=27,
            weight=tkfont.BOLD,family="trebuchet ms"))
        l1_website.place(x=35,y=75)

        l1_username=Label(update_data_canvas,text="Username:",
        font=tkfont.Font(size=27,
        weight=tkfont.BOLD,
        family="trebuchet ms"))
        l1_username.place(x=35,y=125)

        l1_oldpassword=Label(update_data_canvas,text="OLD Password:",
        font=tkfont.Font(size=27,
        weight=tkfont.BOLD,
        family="trebuchet ms"))
        l1_oldpassword.place(x=35,y=175)

        l1_newpassword=Label(update_data_canvas,text="New Password:",
        font=tkfont.Font(size=27,
        weight=tkfont.BOLD,
        family="trebuchet ms"))
        l1_newpassword.place(x=35,y=225)

        l1_cpassword=Label(update_data_canvas,text="Confirm Password:",
        font=tkfont.Font(size=27,
        weight=tkfont.BOLD,
        family="trebuchet ms"))
        l1_cpassword.place(x=35,y=275)

        check_button=Button(update_data_canvas,text='Check'
        ,width=15,command=SQL_part_Update_part1)
        check_button.place(x=750,y=80)

        def auto_condition():
            auto_generate()
            e1_cpassword.delete(0,END)
            e1_newpassword.delete(0,END)
            e1_cpassword.insert(0,auto_new_password)
            e1_newpassword.insert(0,auto_new_password)

        auto_generate_condition_button=Button(update_data_canvas,text="Auto Generate Password",
        width=20,command=auto_condition)
        auto_generate_condition_button.place(x=750,y=230)

        e1_website=Entry(update_data_canvas,width=27,
        bd=2,highlightthickness=0,
        font=tkfont.Font(size=27,
        weight=tkfont.BOLD,family="trebuchet ms"))
        e1_website.place(x=295,y=75)

        e1_username=Entry(update_data_canvas,width=27,
        bd=2,highlightthickness=0,
        font=tkfont.Font(size=27,
        weight=tkfont.BOLD,family="trebuchet ms"))
        e1_username.place(x=295,y=125)

        e1_password=Entry(update_data_canvas,width=27,
        bd=2,highlightthickness=0,
        font=tkfont.Font(size=27,
        weight=tkfont.BOLD,family="trebuchet ms"))   
        e1_password.place(x=295,y=175)

        e1_newpassword=Entry(update_data_canvas,width=27,
        bd=2,highlightthickness=0,
        font=tkfont.Font(size=27,
        weight=tkfont.BOLD,family='trebuchet ms'))
        e1_newpassword.place(x=295,y=225)

        e1_cpassword=Entry(update_data_canvas,bd=2,width=27,
        font=tkfont.Font(size=27,weight=tkfont.BOLD,
        family='trebuchet ms'),highlightthickness=0)
        e1_cpassword.place(x=295,y=275)

        apply_button=Button(update_data_canvas,text='Apply',
        width=50,height=4,
        font=tkfont.Font(size=27,weight=tkfont.BOLD,
        family='trebuchet ms'),command=SQL_part_Update_part2)
        apply_button.place(x=300,y=400)

#-----------------------------------------------------------------------------------------
    
#---------------Function for REFRESH Button------------------------------------------------
    def update_record_info():
        Displayed_data()

#--------------------------------------------------------------------------------------------



#------------------Function for changing the password of the user fron (user's gui)---------------
    def change_password(event):

        def SQL_part_change_password():
        
            cursor.execute('select * from login')
            cp_userdata=cursor.fetchall()
            password=''
        
            for i in range(len(cp_userdata)):
                if cp_userdata[i][0]==user_name:
                    password=cp_userdata[i][1]
        
            if e_cp_oldpassword.get()==password:
        
                if e_cp_newpassword.get()==e_cp_cpassword.get() and password_checker(e_cp_cpassword.get(),e_cp_newpassword.get())==True:
                    cursor.execute("update login set password ='"+e_cp_newpassword.get()+"' where username='"+user_name+"'")
                    connecting.commit()
                    messagebox.showinfo("Changing Password","Your Password has been updated...")
                    change_password_canvas.destroy()
        
                else:
                    messagebox.showinfo('RESET PASSWORD',"Sorry your New Password's are not matching...")
        
            else:
                messagebox.showinfo('RESET PASSWORD','Sorry your Old password is not matching...')
        
        change_password_canvas=Canvas(stem,width=1200,height=700)
        change_password_canvas.place(x=250,y=140)

        messagebox.showinfo("PASSWORD MANAGEMENT SYSTEM","Required Condition to satisfy are : Atleast 10 characters long, has atleast one Captical case letter, 3 numbers and one special character(ex:'!@#$*%&')")

        title_reset_p=Label(change_password_canvas,width=70,height=2,fg='white',bg='black',
        text="RESET PASSWORD",
        font=tkfont.Font(size=28,weight=tkfont.BOLD,
        family="trebuchet ms"))
        title_reset_p.place(x=0,y=45)

        l_cp_oldpassword=Label(change_password_canvas,
        text="Old Password:",
        font=tkfont.Font(size=28,weight=tkfont.BOLD,
        family="trebuchet ms"))
        l_cp_oldpassword.place(x=50,y=160)

        l_cp_newpassword=Label(change_password_canvas,
        text="New Password:",
        font=tkfont.Font(size=28,weight=tkfont.BOLD,
        family="trebuchet ms"))
        l_cp_newpassword.place(x=50,y=215)

        l_cp_cpassword=Label(change_password_canvas,
        text="Confirm Password:",
        font=tkfont.Font(size=28,weight=tkfont.BOLD,
        family="trebuchet ms"))
        l_cp_cpassword.place(x=50,y=270)

        e_cp_oldpassword=Entry(change_password_canvas,
        show='*',bd=2,width=27,highlightthickness=0,
        font=tkfont.Font(size=28,weight=tkfont.BOLD,
        family="trebuchet ms"))
        e_cp_oldpassword.place(x=310,y=160)

        e_cp_newpassword=Entry(change_password_canvas,
        show='*',bd=2,width=27,highlightthickness=0,
        font=tkfont.Font(size=28,weight=tkfont.BOLD,
        family="trebuchet ms"))
        e_cp_newpassword.place(x=310,y=215)

        e_cp_cpassword=Entry(change_password_canvas,
        show='*',bd=2,width=27,highlightthickness=0,
        font=tkfont.Font(size=28,weight=tkfont.BOLD,
        family="trebuchet ms"))
        e_cp_cpassword.place(x=310,y=270)

        b_apply=Button(change_password_canvas,text='Apply',width=35,height=3,
        font=tkfont.Font(size=28,weight=tkfont.BOLD,
        family="trebuchet ms"),command=SQL_part_change_password)
        b_apply.place(x=400,y=375)
#-----------------------------------------------------------------------------------------------------------------------



#making the Tk Widget for the user's gui
    stem=Tk()

    stem.geometry("1440x900")    
    stem.title("Password Management System")
    stem.config(bg="white")

    side_canvas=Canvas(stem,width=250,height=900,bg="#000000",highlightthickness=0)
    side_canvas.place(x=0,y=0)

    messagebox.showinfo("Password Management System",f"Welcome {user_name} ,You have logged in successfully")
    
    longside_canvas=Canvas(stem,width=1440,height=150,bg="white",highlightthickness=0)
    longside_canvas.place(x=250,y=0)
    longside_canvas.create_line(0,140,1190,140,width=4)

    word_logo=Canvas(stem,width=570,height=60,bg="white")
    word_logo.place(x=365,y=33)
    word_logo_img=Image.open("passwordmanager.png")
    word_logo.image=ImageTk.PhotoImage(word_logo_img)
    word_logo.create_image(0,0,image=word_logo.image,anchor="nw")
    
    logo_img=Image.open("logo.png")
    logo_img=logo_img.resize((100,100))
    main_logo=Canvas(stem,width=100,height=100,highlightthickness=0)
    main_logo.place(x=275,y=15)
    main_logo.image=ImageTk.PhotoImage(logo_img)
    main_logo.create_image(0,0,image=main_logo.image,anchor="nw")

    security_img=Image.open('security.png')
    security_img_canvas=Canvas(stem,width=90,height=510,highlightthickness=0)
    security_img_canvas.place(x=70,y=175)
    security_img_canvas.image=ImageTk.PhotoImage(security_img)
    security_img_canvas.create_image(0,0,image=security_img_canvas.image,anchor='nw')
    
    menu_canvas_line=Canvas(stem,width=100,height=138,highlightthickness=0)
    menu_canvas_line.place(x=990,y=0)
    menu_canvas_line.create_line(0,0,0,138,width=8)

    signout_canvas=Canvas(stem,width=200,height=53,highlightthickness=0,bg="white")
    signout_canvas.place(x=1150,y=75)
    signout_img= ImageTk.PhotoImage(file="signout123.png")
    signout_button=Button(signout_canvas,image=signout_img,command=signout)
    signout_button.pack()

    refresh_canvase=Canvas(stem,width=250,height=138,highlightthickness=0.1,bg="white")
    refresh_canvase.place(x=1170,y=180)
    refresh_img = ImageTk.PhotoImage(file="refresh.png")
    refresh_button=Button(refresh_canvase,image=refresh_img,command=update_record_info)
    refresh_button.pack()

    update_canvase=Canvas(stem,width=150,height=50,highlightthickness=0.1,bg="white")
    update_canvase.place(x=1150,y=280)
    update_img = ImageTk.PhotoImage(file="update.png")
    update_button=Button(update_canvase,image=update_img,command=update__info)
    update_button.pack()


#--------------------for user name and username which is placed on the top right cornor-----------
    menu_name_label=Label(stem,text=name,font=tkfont.Font(family="akzidenz grotesk",size=20,weight=tkfont.BOLD))
    menu_name_label.place(x=1005,y=15)

    menu_username_label=Label(stem,text=username,font=tkfont.Font(family="akzidenz grotesk",size=20,weight=tkfont.BOLD))
    menu_username_label.place(x=1005,y=45)

    menu_change_password=Label(stem,text="Change Password",fg="#23272A",font=tkfont.Font(family="akzidenz grotesk",size=20,weight=tkfont.BOLD))
    menu_change_password.place(x=1245,y=35)
    menu_change_password.bind("<Button-1>",change_password)
#----------------------------------------------------------------------------------------------------


#-------------------------Displaying the user's data from MySQL-------------------------------------------------------

    def Displayed_data():
#-------------------------------SQL Part-----------------------------------------------------------------
        cursor.execute('select * from '+tablename)
        user_data=cursor.fetchall()
        
        data_username=["----USERNAME----"]
        data_password=["----PASSWORD----"]
        data_website=['----WEBSITE----']
        
        for i in range(len(user_data)):
            data_username.append(user_data[i][0])
            data_password.append(user_data[i][1])
            data_website.append(user_data[i][2])
#-----------------------------------------------------------------------------------------------------------

#--------------------------------------inserting the record from here----------------------------------------

        l_title=Label(stem,text='Records',width=70,fg='white',bg='#000000',font=tkfont.Font(size=28,weight=tkfont.BOLD,family='trebuchet ms'))
        l_title.place(x=250,y=420)
        
        data_main_frame=Frame(stem,width=1110,height=350)
        data_main_frame.place(x=300,y=460)
        
        mycanvas=Canvas(data_main_frame,width=1110,height=340,highlightthickness=0)
        mycanvas.pack(side=LEFT,fill=BOTH,expand=1)
        
        myscrollbar=Scrollbar(data_main_frame,orient=VERTICAL,command=mycanvas.yview)
        myscrollbar.pack(side=RIGHT,fill=Y)
        
        mycanvas.configure(yscrollcommand=myscrollbar.set)
        mycanvas.bind("<Configure>",lambda e: mycanvas.configure(scrollregion=mycanvas.bbox("all")))
        
        secondframe=Frame(mycanvas)
        
        mycanvas.create_window((0,0),window=secondframe,anchor="nw")
        
        for j in range(len(user_data)+1):
            
            labell1=Label(secondframe,text=data_username[j],
            font=tkfont.Font(size=34,weight=tkfont.BOLD,
            family="trebuchet ms"))
            
            labell1.grid(row=j,column=1)
            
            labell2=Label(secondframe,text=data_password[j],
            font=tkfont.Font(size=34,weight=tkfont.BOLD,
            family="trebuchet ms"))
            
            labell2.grid(row=j,column=5)

            labell3=Label(secondframe,text=data_website[j],
            font=tkfont.Font(size=34,weight=tkfont.BOLD,
            family="trebuchet ms"))

            labell3.grid(row=j,column=10)
#-------------------------------------------------------------------------------------------------------------------------

## Calling the function for displaying user's data....  
    Displayed_data()
    
## Calling the Insertion function with all of it's components...
    user_data_insertion()


## Main loop for the user_ui tk Widget...
    stem.mainloop()

#-------------------------------This Complete Function is for login GUI Tk widget----------------------------------

def login_ui():
    
    main=Tk()
    
    main.geometry('1440x900')
    main.configure(bg='black')
    
    canvas=Canvas(main,width=1440,height=900,highlightthickness=0)
    canvas.pack()
    
    back_img=Image.open('background_img.jpg')
    canvas.image=ImageTk.PhotoImage(back_img)
    canvas.create_image(0,0,image=canvas.image,anchor='nw')

    login_canvas=Canvas(main,width=720,height=400,highlightthickness=0,bg='#23272A')
    login_canvas.place(x=200,y=200)
    
    frame=Frame(main)
    frame.place(x=300,y=700)

#--------------------------------login gui function ----------------------------------------------------    
    def login():

#-----------------------Function to give name, username, tablename value------------------------------------    
        def login_ui():
    
            global tablename,name,username,user_name
    
            cursor.execute('select * from login')
            login_data=cursor.fetchall()
    
            name=""
            username=""
    
            for i in range(len(login_data)):
    
                if login_data[i][0]==username_entry.get() or login_data[i][0].lower()==username_entry.get().lower():
                    if login_data[i][1]==password_entry.get():
                        
                        tablename=login_data[i][2]
                        name='Name: ' + login_data[i][6].title()+','
                        username='Username: ' + login_data[i][0].lower()
                        user_name=login_data[i][0].lower()
                        main.destroy()
                        user_ui()
            
            if len(name)>20:
                name=name[:17]+'...'
#----------------------------------------------------------------------------------------------------------------

#------------------------------------------Funciton for Registeration Canvas ------------------------------------------------
        def register_ui():

            def quit(event):
                register_canvas.destroy()
            
            def process_register():
            
                secret_question=["What's my best friend's name?",
                "What is my birth place called?",
                "What is my favorite sport?"]
            
                secret_value=secret_question.index(secret_input)
            
                cursor.execute('select * from login')
            
                data_User=cursor.fetchall()
                c_username=[]
            
                for i in range(len(data_User)):
                    c_username.append(data_User[i][0])
            
                if username_entry.get()!="Username":
                    if password_entry.get()!='Password' and cpassword_entry.get()!='Confirm Password':
                        if password_entry.get()==cpassword_entry.get():
                            if secret_input!='':
                                if secret_entry.get()!='Secret Answer':
                                    if (password_checker(password_entry.get(),cpassword_entry.get())) is True:
                                        if name_entry.get()!='Name':
                                            uniquecode=''
                                            for l in range(15):
                                                uniquecode+=random.choice(uniquecode_generator)
                                            
                                            data=[username_entry.get().lower(),password_entry.get(),uniquecode,secret_input,secret_value,secret_entry.get(),name_entry.get()]
                                            cmd="insert into login values(%s,%s,%s,%s,%s,%s,%s)"
                                            cursor.execute(cmd,data)
                                            connecting.commit()
                                            cmd='create table if not exists '+uniquecode+'(username varchar(50),password varchar(60),website varchar(60))'
                                            cursor.execute(cmd)
                                            connecting.commit()
                                            messagebox.showinfo('PASSWORD MANAGEMENT SYSTEM','Your Registration was successful.')
                                            register_canvas.destroy()
            
                                        else:
                                            messagebox.showerror('PASSWORD MANAGEMENT SYSTEM','Sorry You have not entered Your Name, Please enter.')
            
                                    else:
                                        messagebox.showerror('PASSWORD MANAGEMENT SYSTEM','Sorry Your Password is either empty or not Matching our conditions.')
                                        messagebox.showerror('PASSWORD MANAGEMENT SYSTEM','Required Condition for Password are: 1)Atleast one Captial letter \n 2) Atleast 3 numbers \n 3) Has atleast 3 Special characters Ex: !@#$&* \n 4)Has atleast 10 Characters long password')
            
                                else:
                                    messagebox.showerror('PASSWORD MANAGEMENT SYSTEM','Sorry You have not entered anything for Secret Answer')
            
                            else:
                                messagebox.showerror("PASSWORD MANAGEMENT SYSTEM",'Sorry You have not entered your SECRET Question.')
            
                        else:
                            messagebox.showerror('PASSWORD MANAGEMENT SYSTEM','Sorry Your Password is not matching.')
            
                    else:
                        messagebox.showerror('PASSWORD MANAGEMENT SYSTEM',"Sorry You have not entered anything for Password, Please enter.")
            
                else:
                    messagebox.showerror('PASSWORD MANAGEMENT SYSTEM',"Sorry Your Username is empty")

            register_canvas=Canvas(main,width=720,height=400,highlightthickness=0,bg='#23272A')
            register_canvas.place(x=200,y=200)

            register_label=Label(register_canvas,text="Register Now!",fg="white",bg="#23272A",font=tkfont.Font(family="akzidenz grotesk",size=40,weight=tkfont.BOLD))
            register_label.place(x=15,y=10)
            
            registereduser=Label(register_canvas,text="Already have an account?",fg="white",bg="#23272A",font=tkfont.Font(family="akzidenz grotesk",size=20,weight=tkfont.BOLD))
            registereduser.place(x=30,y=310)
            registereduser.bind('<Button-1>',quit)
            
            register_button=Button(register_canvas,text="REGISTER",width=35,height=3,command=process_register,highlightbackground="blue",font=tkfont.Font(size=16,weight=tkfont.BOLD,family="trebuchet ms"))
            register_button.place(x=350,y=310)

            messagebox.showinfo('PASSWORD MANAGEMENT SYSTEM','Required Condition for Password are: 1)Atleast one Captial letter \n 2) Atleast 3 numbers \n 3) Has atleast 3 Special characters Ex: !@#$&* \n 4)Has atleast 10 Characters long password')

            def name_clicked(event):
                if name_entry.get()=="Name":
                    name_entry.delete(0,END)
                    name_entry.insert(0,"")

            def name_unclicked(event):
                if name_entry.get()=="":
                    name_entry.insert(0,"Name")

            name_entry=Entry(register_canvas,bd=3,width=26,font=tkfont.Font(size=20))
            name_entry.insert(0,"Name")

            name_entry.bind("<FocusIn>",name_clicked)
            name_entry.bind("<FocusOut>",name_unclicked)

            name_entry.place(x=350,y=50)
            
            def username_clicked(event):
                if username_entry.get()=="Username":
                    username_entry.delete(0,END)
                    username_entry.insert(0,"")

            def username_unclicked(event):
                if username_entry.get()=="":
                    username_entry.insert(0,"Username")

            username_entry=Entry(register_canvas,bd=3,width=26,font=tkfont.Font(size=20))
            username_entry.insert(0,"Username")

            username_entry.bind("<FocusIn>",username_clicked)
            username_entry.bind("<FocusOut>",username_unclicked)

            username_entry.place(x=350,y=95)

            def password_clicked(event):
                if password_entry.get()=="Password":
                    password_entry.delete(0,END)
                    password_entry.insert(0,"")

            def password_unclicked(event):
                if password_entry.get()=="":
                    password_entry.insert(0,"Password")

            password_entry=Entry(register_canvas,bd=3,width=26,font=tkfont.Font(size=20),show="*")
            password_entry.insert(0,"Password")

            password_entry.bind("<FocusIn>",password_clicked)
            password_entry.bind("<FocusOut>",password_unclicked)

            password_entry.place(x=350,y=140)

            def cpassword_clicked(event):
                if cpassword_entry.get()=="Confirm Password":
                    cpassword_entry.delete(0,END)
                    cpassword_entry.insert(0,"")

            def cpassword_unclicked(event):
                if cpassword_entry.get()=="":
                    cpassword_entry.insert(0,"Confirm Password")

            cpassword_entry=Entry(register_canvas,bd=3,width=26,font=tkfont.Font(size=20),show="*")
            cpassword_entry.insert(0,"Confirm Password")

            cpassword_entry.bind("<FocusIn>",cpassword_clicked)
            cpassword_entry.bind("<FocusOut>",cpassword_unclicked)

            cpassword_entry.place(x=350,y=185)

            def secret_menu(event):
                
                global secret_input
                secret_input=event


            OPTIONS = [
                "What's my best friend's name?",
                "What is my birth place called?",
                "What is my favorite sport?"
                ]

            frame=Frame(register_canvas,bg="#23272A")
            frame.place(x=350,y=230)

            variable=StringVar(main)
            variable.set("Secret Questions")

            secret=OptionMenu(frame, variable, *OPTIONS,command=secret_menu)
            secret.config(width=35)
            secret.pack()

            def secret_entry_clicked(event):
                if secret_entry.get()=="Secret Answer":
                    secret_entry.delete(0,END)
                    secret_entry.insert(0,"")
            def secret_entry_unclicked(event):
                if secret_entry.get()=="":
                    secret_entry.insert(0,"Secret Answer")

            secret_entry=Entry(register_canvas,width=26,bd=3,font=tkfont.Font(size=20))
            secret_entry.insert(0,"Secret Answer")
            secret_entry.bind("<FocusIn>",secret_entry_clicked)
            secret_entry.bind("<FocusOut>",secret_entry_unclicked)
            secret_entry.place(x=350,y=260)

        def forget_password(event):

            def quit():
                forgot_canvas.destroy()
            
            def forget_process():
            
                def step_2_forgot_process(username_forgot):
            
                    def check_forgot_password():
            
                        if password_checker(password_entry.get(),cpassword_entry.get()) is True:
            
                            if password_entry.get()!=passwordasdf:
            
                                cmd="update login set password=%s where username =%s "
                                data=[password_entry.get(),username_forgot]

                                cursor.execute(cmd,data)
                                connecting.commit()

                                messagebox.showinfo('PASSWORD MANAGEMENT SYSTEM','Your Password has been updated.')
                                
                                forgot2_canvas.destroy()
                            
                            else:
                            
                                messagebox.showinfo('PASSWORD MANAGEMENT SYSTEM','Sorry your Password is same as your old password.')
                            
                                password_entry.delete(0,END)
                                cpassword_entry.delete(0,END)
                        
                        else:
                        
                            messagebox.showinfo("PASSWORD MANAGEMENT SYSTEM",'Sorry your password is not matching.')
                        
                            password_entry.delete(0,END)
                            cpassword_entry.delete(0,END)
                    
                    forgot2_canvas=Canvas(main,width=720,height=400,highlightthickness=0,bg='#23272A')
                    forgot2_canvas.place(x=200,y=200)
                    
                    label_reset=Label(forgot2_canvas,text='RESET PASSWORD',fg="white",bg="#23272A",font=tkfont.Font(family="akzidenz grotesk",size=30,weight=tkfont.BOLD))
                    label_reset.place(x=250,y=85)
                    
                    forget_label=Label(forgot2_canvas,text="Account Recovery",fg="white",bg="#23272A",font=tkfont.Font(family="akzidenz grotesk",size=30,weight=tkfont.BOLD))
                    forget_label.place(x=25,y=15)
                    
                    upperline_canvas=Canvas(forgot2_canvas,width=720,height=10,highlightthickness=0,bg="#23272A")
                    upperline_canvas.place(x=0,y=80)
                    upperline_canvas.create_line(0,0,720,0,dash=(5,2),fill="white")
                    
                    def password_clicked(event):
                    
                        if password_entry.get()=="Password":
                    
                            password_entry.delete(0,END)
                            password_entry.insert(0,"")

                    def password_unclicked(event):
                        if password_entry.get()=="":
                            password_entry.insert(0,"Password")

                    password_entry=Entry(forgot2_canvas,bd=3,width=26,font=tkfont.Font(size=20),show="*")
                    password_entry.insert(0,"Password")

                    password_entry.bind("<FocusIn>",password_clicked)
                    password_entry.bind("<FocusOut>",password_unclicked)

                    password_entry.place(x=50,y=150)

                    def cpassword_clicked(event):
                        if cpassword_entry.get()=="Confirm Password":
                            cpassword_entry.delete(0,END)
                            cpassword_entry.insert(0,"")

                    def cpassword_unclicked(event):
                        if cpassword_entry.get()=="":
                            cpassword_entry.insert(0,"Confirm Password")

                    cpassword_entry=Entry(forgot2_canvas,bd=3,width=26,font=tkfont.Font(size=20),show="*")
                    cpassword_entry.insert(0,"Confirm Password")

                    cpassword_entry.bind("<FocusIn>",cpassword_clicked)
                    cpassword_entry.bind("<FocusOut>",cpassword_unclicked)

                    cpassword_entry.place(x=50,y=195)

                    apply_button=Button(forgot2_canvas,text="Apply",width=23,height=2,bd=2,highlightbackground="blue",command=check_forgot_password,font=tkfont.Font(size=25,weight=tkfont.BOLD,family="trebuchet ms"))
                    apply_button.place(x=245,y=250)
                
                cursor.execute('select * from login')
                data_user=cursor.fetchall()

                userdata=[]
                secret_q=[]
                secret_a=[]
                passwordq=[]

                for i in range(len(data_user)):

                    userdata.append(data_user[i][0])
                    secret_q.append(data_user[i][3])
                    secret_a.append(data_user[i][5])
                    passwordq.append(data_user[i][1])
                    
                indexvalue=userdata.index(username_entry.get())

                global passwordasdf

                passwordasdf=passwordq[indexvalue]
                
                if username_entry.get()==userdata[indexvalue] or username_entry.get().lower()==userdata[indexvalue].lower():
                
                        if secret_send==secret_q[indexvalue]:
                
                            if secret_answer.get()==secret_a[indexvalue] or secret_answer.get().lower()==secret_a[indexvalue].lower():
                
                                forgot_canvas.destroy()
                
                                messagebox.showinfo('PASSWORD MANAGEMENT SYSTEM','Required Condition for Password are: 1)Atleast one Captial letter \n 2) Atleast 3 numbers \n 3) Has atleast 3 Special characters Ex: !@#$&* \n 4)Has atleast 10 Characters long password')
                
                                username_forgot_check=userdata[indexvalue]
                
                                step_2_forgot_process(username_forgot_check)
            forgot_canvas=Canvas(main,width=720,height=400,highlightthickness=0,bg='#23272A')
            forgot_canvas.place(x=200,y=200)
           
            label_reset=Label(forgot_canvas,text='RESET PASSWORD',fg="white",bg="#23272A",font=tkfont.Font(family="akzidenz grotesk",size=30,weight=tkfont.BOLD))
            label_reset.place(x=250,y=85)
            
            login=Button(forgot_canvas,text="LOGIN",width=20,bd=3,height=2,highlightbackground="blue",command=quit,font=tkfont.Font(size=25,weight=tkfont.BOLD,family="trebuchet ms"))
            login.place(x=250,y=330)
            
            forget_button=Button(forgot_canvas,text="Verify",width=29,height=2,bd=3,highlightthickness=2,command=forget_process,font=tkfont.Font(size=20,weight=tkfont.BOLD,family="trebuchet ms"))
            forget_button.place(x=240,y=240)
            
            forget_label=Label(forgot_canvas,text="Account Recovery",fg="white",bg="#23272A",font=tkfont.Font(family="akzidenz grotesk",size=30,weight=tkfont.BOLD))
            forget_label.place(x=25,y=15)
            
            def username_clicked(event):
                if username_entry.get()=="Username":
                    username_entry.delete(0,END)
                    username_entry.insert(0,"")

            def username_unclicked(event):
                if username_entry.get()=="":
                    username_entry.insert(0,"Username")
            
            username_entry=Entry(forgot_canvas,bd=2,width=27,highlightthickness=0,font=tkfont.Font(size=22,weight=tkfont.BOLD,family="trebuchet ms"))
            
            username_entry.insert(0,"Username")
            username_entry.bind("<FocusIn>",username_clicked)
            username_entry.bind("<FocusOut>",username_unclicked)
            username_entry.place(x=25,y=130)

            OPTIONS = [
                "What's my best friend's name?",
                "What is my birth place called?",
                "What is my favorite sport?"
                ]
            def sercet_value_question(event):
                global secret_send
                secret_send=event

            frame_forgot=Frame(forgot_canvas)
            frame_forgot.place(x=25,y=170)

            variable=StringVar(forgot_canvas)
            variable.set("Sercet Questions")
            
            secret_forgot=OptionMenu(frame_forgot, variable, *OPTIONS,command=sercet_value_question)
            secret_forgot.config(width=36)
            secret_forgot.pack()
            
            def secret_answer_clicked(event):
                if secret_answer.get()=="Secret Answer":
                    secret_answer.delete(0,END)
                    secret_answer.insert(0,"")

            def secret_answer_unclicked(event):
                if secret_answer.get()=="":
                    print("user has left the secret answer tab")
                    secret_answer.insert(0,"Secret Answer")
            
            secret_answer=Entry(forgot_canvas,bd=2,width=27,highlightthickness=0,font=tkfont.Font(size=22,weight=tkfont.BOLD,family="trebuchet ms"))
            
            secret_answer.insert(0,"Secret Answer")
            secret_answer.bind("<FocusIn>",secret_answer_clicked)
            secret_answer.bind("<FocusOut>",secret_answer_unclicked)
            secret_answer.place(x=25,y=200)
            
            upperline_canvas=Canvas(forgot_canvas,width=720,height=10,highlightthickness=0,bg="#23272A")
            upperline_canvas.place(x=0,y=80)
            upperline_canvas.create_line(0,0,720,0,dash=(5,2),fill="white")
            
            lowerline_canvas=Canvas(forgot_canvas,width=720,height=25,highlightthickness=0,bg="#23272A")
            lowerline_canvas.place(x=0,y=295)
            lowerline_canvas.create_line(0,15,720,15,dash=(5,2),fill="white")
            
            or_label=Label(lowerline_canvas,text='OR',bg="#23272A",fg="white",highlightthickness=0,font=tkfont.Font(family="akzidenz grotesk",size=20,weight=tkfont.BOLD))
            or_label.place(x=350,y=0)

        welcome_label=Label(main,text="Welcome Back !",fg="white",bg="#23272A",font=tkfont.Font(family="akzidenz grotesk",size=30,weight=tkfont.BOLD))
        welcome_label.place(x=225,y=235)

        main_frame_logo=Canvas(main,width=295,height=300,highlightthickness=0)
        main_frame_logo.place(x=605,y=270)
        
        img=Image.open("logo.png")
        main_frame_logo.image=ImageTk.PhotoImage(img)
        main_frame_logo.create_image(0,0,image=main_frame_logo.image,anchor="nw")

        def username_clicked(event):
            if username_entry.get()=="Username":
                username_entry.delete(0,END)
                username_entry.insert(0,"")

        def username_unclicked(event):
            if username_entry.get()=="":
                username_entry.insert(0,"Username")

        username_entry=Entry(main,bd=3,width=26,font=tkfont.Font(size=20))
        username_entry.insert(0,"Username")

        username_entry.bind("<FocusIn>",username_clicked)
        username_entry.bind("<FocusOut>",username_unclicked)
        username_entry.place(x=240,y=300)

        def password_clicked(event):
            if password_entry.get()=="Password":
                password_entry.delete(0,END)
                password_entry.insert(0,"")

        def password_unclicked(event):
            if password_entry.get()=="":
                password_entry.insert(0,"Password")

        password_entry=Entry(main,bd=3,width=26,font=tkfont.Font(size=20),show="*")
        password_entry.insert(0,"Password")

        password_entry.bind("<FocusIn>",password_clicked)
        password_entry.bind("<FocusOut>",password_unclicked)

        password_entry.place(x=240,y=350)

        login_button=Button(main,text="LOGIN",width=35,height=2,command=login_ui,highlightbackground="blue",font=tkfont.Font(size=15,weight=tkfont.BOLD,family="trebuchet ms"))
        login_button.place(x=240,y=400)

        straightline_canvas=Canvas(main,width=350,height=100,highlightthickness=0,bd=0,bg="#23272A")
        straightline_canvas.place(x=245,y=470)
        straightline_canvas.create_line(0,10,340,10,fill="white")

        label_or=Label(straightline_canvas,text="OR",bg="#23272A",fg="white")
        label_or.place(x=150,y=0)

        register_button=Button(main,text="REGISTER",width=35,height=4,command=register_ui,highlightbackground="blue",font=tkfont.Font(size=16,weight=tkfont.BOLD,family="trebuchet ms"))
        register_button.place(x=240,y=500)

        user_forgot=Label(main,text="Forgot Password ?",fg="white",bg="#23272A",font=tkfont.Font(family="akzidenz grotesk",size=20,weight=tkfont.BOLD))
        user_forgot.place(x=410,y=440)
        user_forgot.bind("<Button-1>",forget_password)

    login()
    main.mainloop()
login_ui()
